{"version":3,"sources":["webpack:///component---src-pages-ast-jsx-5fb735c00a5696c14781.js","webpack:///./~/orga/lib/defaults.js","webpack:///./~/orga/lib/index.js","webpack:///./~/orga/lib/inline.js","webpack:///./~/orga/lib/lexer.js","webpack:///./~/orga/lib/node.js","webpack:///./~/orga/lib/parser.js","webpack:///./src/pages/_style.module.scss","webpack:///./src/pages/ast.jsx"],"names":["webpackJsonp","122","module","exports","todos","496","__webpack_require__","_interopRequireDefault","obj","__esModule","default","parse","string","options","arguments","length","undefined","parser","_parser2","_parser","Parser","497","markup","marker","RegExp","PRE","BORDER","POST","text","_parse","LINK_PATTERN","captures","_node2","with","path","desc","markups","name","_loop","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_ref","value","err","return","pattern","post","m","exec","shift","before","after","pop","nodes","push","concat","Array","isArray","reduce","all","node","hasOwnProperty","type","_node","498","Syntax","this","rules","headlinePattern","join","Lexer","syntax","org","updateTODOs","prototype","define","update","i","findIndex","r","newRule","splice","level","keyword","priority","content","tags","split","map","str","trim","filter","String","key","PLANNING_KEYWORDS","timestamp","params","indent","bullet","ordered","includes","result","checked","cells","label","tokenize","input","token","raw","data","trimed","197","Node","children","newNode","Object","assign","n","parent","499","lexer","_lexer2","parsePlanning","parseDrawer","begin","lines","hasNext","t","parseBlock","_t$data","_t","toUpperCase","format","_lexer","_inline","peek","getToken","cursor","consume","index","self","tokens","start","downgradeToLine","tryTo","process","restorePoint","bind","document","meta","parseSection","processKeyword","doc","_token$data","toLowerCase","parseHeadline","_token$data2","headline","planning","drawer","section","currentLevel","newSection","paragraph","parseParagraph","block","parseList","table","parseTable","list","_token$data3","item","startsWith","c","row","340","title","249","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","call","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","pageQuery","_react","_react2","_orga","_styleModule","_styleModule2","AST","_React$Component","apply","render","d","props","astToml","replacer","examples","e","json","JSON","stringify","console","log","createElement","className","Component"],"mappings":"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","file":"component---src-pages-ast-jsx-5fb735c00a5696c14781.js","sourcesContent":["webpackJsonp([202837685886607],{\n\n/***/ 122:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports = {\n\t  todos: [\"TODO\", \"DONE\"]\n\t};\n\n/***/ }),\n\n/***/ 496:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _parser = __webpack_require__(499);\n\t\n\tvar _parser2 = _interopRequireDefault(_parser);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction parse(string) {\n\t  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __webpack_require__(122);\n\t\n\t  var parser = new _parser2.default(options);\n\t  return parser.parse(string);\n\t}\n\t\n\tmodule.exports = {\n\t  Parser: _parser2.default,\n\t  parse: parse\n\t};\n\n/***/ }),\n\n/***/ 497:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _node = __webpack_require__(197);\n\t\n\tvar _node2 = _interopRequireDefault(_node);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar LINK_PATTERN = /(.*?)\\[\\[([^\\]]*)\\](?:\\[([^\\]]*)\\])?\\](.*)/m; // \\1 => link, \\2 => text\n\t\n\tvar PRE = '(?:[\\\\s\\\\({\\'\"]|^)';\n\tvar POST = '(?:[\\\\s-\\\\.,:!?\\'\\\\)}]|$)';\n\tvar BORDER = '[^,\\'\"\\\\s]';\n\t\n\tfunction markup(marker) {\n\t  return RegExp('(.*?' + PRE + ')' + marker + '(' + BORDER + '.+?' + BORDER + ')' + marker + '(' + POST + '.*)', 'm');\n\t}\n\t\n\tfunction parse(text) {\n\t  text = _parse(LINK_PATTERN, text, function (captures) {\n\t    return new _node2.default('link', captures[1]).with({ path: captures[0], desc: captures[1] });\n\t  });\n\t\n\t  var markups = [{ name: 'bold', marker: '\\\\*' }, { name: 'verbatim', marker: '=' }, { name: 'italic', marker: '/' }, { name: 'strikeThrough', marker: '\\\\+' }, { name: 'underline', marker: '_' }, { name: 'code', marker: '~' }];\n\t\n\t  var _loop = function _loop(name, marker) {\n\t    text = _parse(markup(marker), text, function (captures) {\n\t      return new _node2.default(name, captures[0]);\n\t    });\n\t  };\n\t\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\t\n\t  try {\n\t    for (var _iterator = markups[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var _ref = _step.value;\n\t      var name = _ref.name;\n\t      var marker = _ref.marker;\n\t\n\t      _loop(name, marker);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\t\n\t  return text;\n\t}\n\t\n\tfunction _parse(pattern, text, post) {\n\t  if (typeof text === 'string') {\n\t    var m = pattern.exec(text);\n\t    if (!m) return [new _node2.default('text').with({ value: text })];\n\t    m.shift();\n\t    var before = m.shift();\n\t    var after = m.pop();\n\t    var nodes = [];\n\t    if (before.length > 0) {\n\t      nodes.push(new _node2.default('text').with({ value: before }));\n\t    }\n\t    if (m.length > 0) {\n\t      nodes.push(post(m));\n\t      // nodes.push(new Node(name).with({ value: match }))\n\t    }\n\t    if (after) {\n\t      nodes = nodes.concat(_parse(pattern, after, post));\n\t    }\n\t    return nodes;\n\t  }\n\t\n\t  if (Array.isArray(text)) {\n\t    return text.reduce(function (all, node) {\n\t      if (node.hasOwnProperty('type') && node.type != 'text') {\n\t        return all.concat(node);\n\t      }\n\t      return all.concat(_parse(pattern, node, post));\n\t    }, []);\n\t  }\n\t\n\t  if (typeof text.value === 'string') {\n\t    return _parse(pattern, text.value, post);\n\t  }\n\t  return undefined;\n\t}\n\t\n\tmodule.exports = {\n\t  parse: parse\n\t};\n\n/***/ }),\n\n/***/ 498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction Syntax() {\n\t  this.rules = [];\n\t}\n\t\n\tSyntax.prototype = {\n\t  define: function define(name, pattern) {\n\t    var post = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n\t      return {};\n\t    };\n\t\n\t    this.rules.push({\n\t      name: name,\n\t      pattern: pattern,\n\t      post: post\n\t    });\n\t  },\n\t\n\t  update: function update(name, pattern) {\n\t    var i = this.rules.findIndex(function (r) {\n\t      return r.name == name;\n\t    });\n\t    var newRule = { name: name, post: function post() {} };\n\t    if (i != -1) {\n\t      newRule = this.rules.splice(i, 1)[0];\n\t    }\n\t    newRule.pattern = pattern;\n\t    this.rules.splice(i, 0, newRule);\n\t  }\n\t};\n\t\n\tvar org = new Syntax();\n\t\n\tfunction headlinePattern() {\n\t  var todos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['TODO', 'DONE'];\n\t\n\t  return RegExp('^(\\\\*+)\\\\s+(?:(' + todos.join('|') + ')\\\\s+)?(?:\\\\[#(A|B|C)\\\\]\\\\s+)?(.*?)\\\\s*(:(?:\\\\w+:)+)?$');\n\t}\n\t\n\torg.define('headline', headlinePattern(), function (m) {\n\t  var level = m[1].length;\n\t  var keyword = m[2];\n\t  var priority = m[3];\n\t  var content = m[4];\n\t  var tags = (m[5] || '').split(':').map(function (str) {\n\t    return str.trim();\n\t  }).filter(String);\n\t  return { level: level, keyword: keyword, priority: priority, content: content, tags: tags };\n\t});\n\t\n\torg.define('keyword', /^\\s*#\\+(\\w+):\\s*(.*)$/, function (m) {\n\t  var key = m[1];\n\t  var value = m[2];\n\t  return { key: key, value: value };\n\t});\n\t\n\tvar PLANNING_KEYWORDS = ['DEADLINE', 'SCHEDULED', 'CLOSED'];\n\torg.define('planning', RegExp('^\\\\s*(' + PLANNING_KEYWORDS.join('|') + '):\\\\s*(.+)$'), function (m) {\n\t  var keyword = m[1];\n\t  var timestamp = m[2];\n\t  return { keyword: keyword, timestamp: timestamp };\n\t});\n\t\n\torg.define('block.begin', /^\\s*#\\+begin_(\\w+)(.*)$/i, function (m) {\n\t  var type = m[1];\n\t  var params = m[2].split(' ').map(function (str) {\n\t    return str.trim();\n\t  }).filter(String);\n\t  return { type: type, params: params };\n\t});\n\t\n\torg.define('block.end', /^\\s*#\\+end_(\\w+)$/i, function (m) {\n\t  var type = m[1];\n\t  return { type: type };\n\t});\n\t\n\torg.define('drawer.end', /^\\s*:end:\\s*$/i);\n\t\n\torg.define('drawer.begin', /^\\s*:(\\w+):\\s*$/, function (m) {\n\t  var type = m[1];\n\t  return { type: type };\n\t});\n\t\n\torg.define('list.item', /^(\\s*)([-+]|\\d+[.)])\\s+(?:\\[(x|X|-| )\\])?(.*)$/, function (m) {\n\t  var indent = m[1].length;\n\t  var bullet = m[2];\n\t  var content = m[4];\n\t  var ordered = true;\n\t  if (['-', '+'].includes(bullet)) {\n\t    ordered = false;\n\t  }\n\t\n\t  var result = { indent: indent, ordered: ordered, content: content };\n\t  if (m[3]) {\n\t    var checked = m[3] != ' ';\n\t    result.checked = checked;\n\t  }\n\t  return result;\n\t});\n\t\n\torg.define('table.separator', /^\\s*\\|-/);\n\t\n\torg.define('table.row', /^\\s*\\|(\\s*.+\\|)+\\s*$/, function (m) {\n\t  var cells = m[1].split('|').map(function (str) {\n\t    return str.trim();\n\t  }).filter(String);\n\t  return { cells: cells };\n\t});\n\t\n\torg.define('horizontalRule', /^\\s*-{5,}\\s*$/);\n\t\n\torg.define('comment', /^\\s*#\\s.*$/);\n\t\n\torg.define('footnote', /^\\[fn:(\\w+)\\]:\\s*(.*)$/, function (m) {\n\t  var label = m[1];\n\t  var content = m[2];\n\t  return { label: label, content: content };\n\t});\n\t\n\tvar inline = new Syntax();\n\t\n\tfunction Lexer() {\n\t  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : __webpack_require__(122);\n\t\n\t  this.syntax = org;\n\t  var todos = options.todos;\n\t\n\t  if (todos) {\n\t    this.updateTODOs(todos);\n\t  }\n\t}\n\t\n\tLexer.prototype = {\n\t  tokenize: function tokenize(input) {\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t      for (var _iterator = this.syntax.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var _ref = _step.value;\n\t        var name = _ref.name;\n\t        var pattern = _ref.pattern;\n\t        var post = _ref.post;\n\t\n\t        var m = pattern.exec(input);\n\t        if (!m) {\n\t          continue;\n\t        }\n\t        var token = { name: name, raw: input };\n\t        token.data = post(m);\n\t        return token;\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t\n\t    var trimed = input.trim();\n\t    if (trimed === '') {\n\t      return { name: 'blank', raw: input };\n\t    }\n\t\n\t    return { name: 'line', raw: input };\n\t  },\n\t\n\t  updateTODOs: function updateTODOs(todos) {\n\t    this.syntax.update('headline', headlinePattern(todos));\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = Lexer;\n\n/***/ }),\n\n/***/ 197:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tfunction Node(type) {\n\t  var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\n\t  this.type = type;\n\t  this.children = [];\n\t  this.push(children);\n\t}\n\t\n\tNode.prototype = {\n\t  with: function _with(data) {\n\t    var newNode = this;\n\t    newNode = Object.assign(this, data);\n\t    return newNode;\n\t  },\n\t\n\t  push: function push(node) {\n\t    if (Array.isArray(node)) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = node[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var n = _step.value;\n\t\n\t          this.push(n);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    } else if (node instanceof Node) {\n\t      node.parent = this;\n\t      this.children.push(node);\n\t    } else if (typeof node === \"string\") {\n\t      var newNode = new Node(\"text\").with({ value: node });\n\t      newNode.parent = this;\n\t      this.children.push(newNode);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = Node;\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _lexer = __webpack_require__(498);\n\t\n\tvar _lexer2 = _interopRequireDefault(_lexer);\n\t\n\tvar _node = __webpack_require__(197);\n\t\n\tvar _node2 = _interopRequireDefault(_node);\n\t\n\tvar _inline = __webpack_require__(497);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Parser() {\n\t  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : __webpack_require__(122);\n\t\n\t  this.options = options;\n\t  this.lexer = new _lexer2.default(this.options);\n\t}\n\t\n\tParser.prototype.peek = function () {\n\t  return this.getToken(this.cursor + 1);\n\t};\n\t\n\tParser.prototype.hasNext = function () {\n\t  return this.cursor + 1 < this.lines.length;\n\t};\n\t\n\tParser.prototype.consume = function () {\n\t  this.cursor++;\n\t};\n\t\n\tParser.prototype.next = function () {\n\t  this.consume();\n\t  return this.getToken(this.cursor);\n\t};\n\t\n\tParser.prototype.getToken = function (index) {\n\t  var self = this;\n\t  if (index >= self.lines.length) {\n\t    return undefined;\n\t  }\n\t  if (index >= self.tokens.length) {\n\t    var start = self.tokens.length;\n\t    for (var i = start; i <= index; i++) {\n\t      self.tokens.push(self.lexer.tokenize(self.lines[i]));\n\t    }\n\t  }\n\t  return self.tokens[index];\n\t};\n\t\n\tParser.prototype.downgradeToLine = function (index) {\n\t  var raw = this.tokens[index].raw;\n\t\n\t  this.tokens[index] = { name: 'line', raw: raw, data: { content: raw.trim() } };\n\t};\n\t\n\tParser.prototype.tryTo = function (process) {\n\t  var restorePoint = this.cursor;\n\t  var result = process.bind(this)();\n\t  if (result) {\n\t    return result;\n\t  }\n\t  this.cursor = restorePoint;\n\t  return result;\n\t};\n\t\n\tParser.prototype.parse = function (string) {\n\t  var self = this;\n\t  var document = new _node2.default('root').with({ meta: {} });\n\t  self.cursor = -1;\n\t  self.lines = string.split('\\n'); // TODO: more robust lines?\n\t  self.tokens = [];\n\t  return this.parseSection(document);\n\t};\n\t\n\tParser.prototype.processKeyword = function (token, doc) {\n\t  var _token$data = token.data,\n\t      key = _token$data.key,\n\t      value = _token$data.value;\n\t\n\t  switch (key) {\n\t    case 'TODO':\n\t      if (doc.type != 'root') break;\n\t      var todos = value.split(/\\s|\\|/g).filter(String);\n\t      doc.meta.todos = todos;\n\t      this.lexer.updateTODOs(todos);\n\t      break;\n\t    case 'HTML':\n\t      doc.push(new _node2.default('html').with({ value: value }));\n\t      break;\n\t    default:\n\t      if (doc.type === 'root') {\n\t        doc.meta[key.toLowerCase()] = value;\n\t      }\n\t      break;\n\t  }\n\t  return doc;\n\t};\n\t\n\tParser.prototype.parseHeadline = function () {\n\t  var token = this.next();\n\t  var _token$data2 = token.data,\n\t      level = _token$data2.level,\n\t      keyword = _token$data2.keyword,\n\t      priority = _token$data2.priority,\n\t      tags = _token$data2.tags,\n\t      content = _token$data2.content;\n\t\n\t  var text = (0, _inline.parse)(content);\n\t  var headline = new _node2.default('headline', text).with({\n\t    level: level, keyword: keyword, priority: priority, tags: tags\n\t  });\n\t  var planning = this.tryTo(parsePlanning);\n\t  if (planning) {\n\t    headline.push(planning);\n\t  }\n\t\n\t  while (this.hasNext() && this.peek().name == 'drawer.begin') {\n\t    var drawer = this.tryTo(parseDrawer);\n\t    if (!drawer) {\n\t      // broken drawer\n\t      this.downgradeToLine(this.cursor + 1);\n\t      break;\n\t    }\n\t    headline.push(drawer);\n\t  }\n\t\n\t  return headline;\n\t};\n\t\n\tParser.prototype.parseSection = function (section) {\n\t  var token = this.peek();\n\t  if (!token) {\n\t    return section;\n\t  }\n\t  switch (token.name) {\n\t    case 'keyword':\n\t      section = this.processKeyword(token, section);\n\t      this.consume();\n\t      break;\n\t    case 'headline':\n\t      var level = token.data.level;\n\t\n\t      var currentLevel = section.level || 0;\n\t      if (level <= currentLevel) {\n\t        return section;\n\t      }\n\t      var headline = this.parseHeadline();\n\t      var newSection = new _node2.default('section').with({ level: level });\n\t      newSection.push(headline);\n\t      section.push(this.parseSection(newSection));\n\t      break;\n\t    case 'line':\n\t      var paragraph = this.parseParagraph();\n\t      section.push(paragraph);\n\t      break;\n\t    case 'block.begin':\n\t      var block = this.tryTo(parseBlock);\n\t      if (block) section.push(block);else this.downgradeToLine(this.cursor + 1);\n\t      break;\n\t    case 'list.item':\n\t      var list = new _node2.default('list');\n\t      section.push(this.parseList(-1));\n\t      break;\n\t    case 'table.row':\n\t      var table = this.parseTable();\n\t      section.push(table);\n\t      break;\n\t    case 'horizontalRule':\n\t      this.consume();\n\t      section.push(new _node2.default('horizontalRule'));\n\t      break;\n\t    // TODO: footnote\n\t    default:\n\t      this.consume();\n\t    // this.push({ type: 'dummy', data: token.data })\n\t  }\n\t  return this.parseSection(section);\n\t};\n\t\n\tParser.prototype.parseParagraph = function () {\n\t  var lines = [];\n\t  do {\n\t    var token = this.peek();\n\t    // also eats broken block/drawer ends\n\t    if (!['line', 'block.end', 'drawer.end'].includes(token.name)) break;\n\t    this.consume();\n\t    lines = lines.concat((0, _inline.parse)(token.raw.trim()));\n\t  } while (this.hasNext());\n\t\n\t  return new _node2.default('paragraph', lines);\n\t};\n\t\n\tParser.prototype.parseList = function (level) {\n\t  var list = new _node2.default('list');\n\t  var self = this;\n\t  var listItems = [];\n\t  while (self.hasNext()) {\n\t    var token = self.peek();\n\t    if (token.name != 'list.item') break;\n\t    var _token$data3 = token.data,\n\t        indent = _token$data3.indent,\n\t        content = _token$data3.content,\n\t        ordered = _token$data3.ordered,\n\t        checked = _token$data3.checked;\n\t\n\t    if (indent <= level) break;\n\t    self.consume();\n\t    var item = new _node2.default('listItem', [(0, _inline.parse)(content)]).with({ ordered: ordered });\n\t    if (checked !== undefined) {\n\t      item.checked = checked;\n\t    }\n\t    item.push(self.parseList(indent));\n\t    list.push(item);\n\t  }\n\t  if (list.children.length > 0) {\n\t    // list\n\t    list.ordered = list.children[0].ordered;\n\t    return list;\n\t  }\n\t  return undefined;\n\t};\n\t\n\tParser.prototype.parseTable = function () {\n\t  var table = new _node2.default('table');\n\t  var self = this;\n\t  while (self.hasNext()) {\n\t    var token = self.peek();\n\t    if (!token.name.startsWith('table.')) break;\n\t    self.consume();\n\t    if (token.name === 'table.separator') {\n\t      table.push(new _node2.default('tableSeparator'));\n\t      continue;\n\t    }\n\t    if (token.name != 'table.row') break;\n\t    var cells = token.data.cells.map(function (c) {\n\t      return new _node2.default('tableCell', c);\n\t    });\n\t    var row = new _node2.default('tableRow', cells);\n\t    table.push(row);\n\t  }\n\t  return table;\n\t};\n\t\n\tfunction parsePlanning() {\n\t  var token = this.next();\n\t  if (!token || token.name != 'planning') {\n\t    return undefined;\n\t  }\n\t  return new _node2.default('planning').with(token.data);\n\t}\n\t\n\tfunction parseDrawer() {\n\t  var begin = this.next();\n\t  var lines = [];\n\t  while (this.hasNext()) {\n\t    var t = this.next();\n\t    if (t.name === 'headline') {\n\t      return undefined;\n\t    }\n\t    if (t.name === 'drawer.end') {\n\t      return new _node2.default('drawer').with({ name: begin.data.type, value: lines.join('\\n') });\n\t    }\n\t    lines.push(t.raw);\n\t  }\n\t  return undefined;\n\t}\n\t\n\tfunction parseBlock() {\n\t  var t = this.next();\n\t  var _t$data = t.data,\n\t      type = _t$data.type,\n\t      params = _t$data.params;\n\t\n\t  var lines = [];\n\t  while (this.hasNext()) {\n\t    var _t = this.next();\n\t    if (_t.name === 'headline') {\n\t      return undefined;\n\t    }\n\t    if (_t.name === 'block.end' && _t.data.type.toUpperCase() === type.toUpperCase()) {\n\t      if (_t.data.type.toUpperCase() === 'EXPORT') {\n\t        var format = params[0];\n\t        return new _node2.default(format).with({ value: lines.join('\\n') });\n\t      }\n\t      return new _node2.default('block').with({ name: type.toUpperCase(), params: params, value: lines.join('\\n') });\n\t    }\n\t    lines.push(_t.raw);\n\t  }\n\t  return undefined;\n\t}\n\t\n\tmodule.exports = Parser;\n\n/***/ }),\n\n/***/ 340:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\tmodule.exports = {\"title\":\"src-pages----_style-module---title---2ID2H\"};\n\n/***/ }),\n\n/***/ 249:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _orga = __webpack_require__(496);\n\t\n\tvar _styleModule = __webpack_require__(340);\n\t\n\tvar _styleModule2 = _interopRequireDefault(_styleModule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar AST = function (_React$Component) {\n\t  _inherits(AST, _React$Component);\n\t\n\t  function AST() {\n\t    _classCallCheck(this, AST);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  AST.prototype.render = function render() {\n\t    var d = this.props.data.astToml;\n\t    var parser = new _orga.Parser();\n\t    var replacer = function replacer(key, value) {\n\t      if (['parent'].includes(key)) return;\n\t      if (Array.isArray(value) && value.length === 0) return;\n\t      return value;\n\t    };\n\t    var examples = d.examples.map(function (e) {\n\t      var obj = parser.parse(e.org);\n\t      var json = JSON.stringify(obj.children[0], replacer, 2);\n\t      console.log(json);\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement(\n\t          'h2',\n\t          null,\n\t          e.name\n\t        ),\n\t        _react2.default.createElement(\n\t          'p',\n\t          null,\n\t          e.desc\n\t        ),\n\t        _react2.default.createElement(\n\t          'pre',\n\t          null,\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            e.org\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          'p',\n\t          null,\n\t          'Yields:'\n\t        ),\n\t        _react2.default.createElement(\n\t          'pre',\n\t          null,\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            json\n\t          )\n\t        )\n\t      );\n\t    });\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'h1',\n\t        { className: _styleModule2.default.title },\n\t        'Abstract Syntax Tree'\n\t      ),\n\t      examples\n\t    );\n\t  };\n\t\n\t  return AST;\n\t}(_react2.default.Component);\n\t\n\texports.default = AST;\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-ast-jsx-5fb735c00a5696c14781.js","\"use strict\";\n\nexports = {\n  todos: [\"TODO\", \"DONE\"]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/orga/lib/defaults.js\n// module id = 122\n// module chunks = 202837685886607","'use strict';\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : require('./defaults');\n\n  var parser = new _parser2.default(options);\n  return parser.parse(string);\n}\n\nmodule.exports = {\n  Parser: _parser2.default,\n  parse: parse\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/orga/lib/index.js\n// module id = 496\n// module chunks = 202837685886607","'use strict';\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LINK_PATTERN = /(.*?)\\[\\[([^\\]]*)\\](?:\\[([^\\]]*)\\])?\\](.*)/m; // \\1 => link, \\2 => text\n\nvar PRE = '(?:[\\\\s\\\\({\\'\"]|^)';\nvar POST = '(?:[\\\\s-\\\\.,:!?\\'\\\\)}]|$)';\nvar BORDER = '[^,\\'\"\\\\s]';\n\nfunction markup(marker) {\n  return RegExp('(.*?' + PRE + ')' + marker + '(' + BORDER + '.+?' + BORDER + ')' + marker + '(' + POST + '.*)', 'm');\n}\n\nfunction parse(text) {\n  text = _parse(LINK_PATTERN, text, function (captures) {\n    return new _node2.default('link', captures[1]).with({ path: captures[0], desc: captures[1] });\n  });\n\n  var markups = [{ name: 'bold', marker: '\\\\*' }, { name: 'verbatim', marker: '=' }, { name: 'italic', marker: '/' }, { name: 'strikeThrough', marker: '\\\\+' }, { name: 'underline', marker: '_' }, { name: 'code', marker: '~' }];\n\n  var _loop = function _loop(name, marker) {\n    text = _parse(markup(marker), text, function (captures) {\n      return new _node2.default(name, captures[0]);\n    });\n  };\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = markups[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref = _step.value;\n      var name = _ref.name;\n      var marker = _ref.marker;\n\n      _loop(name, marker);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return text;\n}\n\nfunction _parse(pattern, text, post) {\n  if (typeof text === 'string') {\n    var m = pattern.exec(text);\n    if (!m) return [new _node2.default('text').with({ value: text })];\n    m.shift();\n    var before = m.shift();\n    var after = m.pop();\n    var nodes = [];\n    if (before.length > 0) {\n      nodes.push(new _node2.default('text').with({ value: before }));\n    }\n    if (m.length > 0) {\n      nodes.push(post(m));\n      // nodes.push(new Node(name).with({ value: match }))\n    }\n    if (after) {\n      nodes = nodes.concat(_parse(pattern, after, post));\n    }\n    return nodes;\n  }\n\n  if (Array.isArray(text)) {\n    return text.reduce(function (all, node) {\n      if (node.hasOwnProperty('type') && node.type != 'text') {\n        return all.concat(node);\n      }\n      return all.concat(_parse(pattern, node, post));\n    }, []);\n  }\n\n  if (typeof text.value === 'string') {\n    return _parse(pattern, text.value, post);\n  }\n  return undefined;\n}\n\nmodule.exports = {\n  parse: parse\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/orga/lib/inline.js\n// module id = 497\n// module chunks = 202837685886607","'use strict';\n\nfunction Syntax() {\n  this.rules = [];\n}\n\nSyntax.prototype = {\n  define: function define(name, pattern) {\n    var post = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n      return {};\n    };\n\n    this.rules.push({\n      name: name,\n      pattern: pattern,\n      post: post\n    });\n  },\n\n  update: function update(name, pattern) {\n    var i = this.rules.findIndex(function (r) {\n      return r.name == name;\n    });\n    var newRule = { name: name, post: function post() {} };\n    if (i != -1) {\n      newRule = this.rules.splice(i, 1)[0];\n    }\n    newRule.pattern = pattern;\n    this.rules.splice(i, 0, newRule);\n  }\n};\n\nvar org = new Syntax();\n\nfunction headlinePattern() {\n  var todos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['TODO', 'DONE'];\n\n  return RegExp('^(\\\\*+)\\\\s+(?:(' + todos.join('|') + ')\\\\s+)?(?:\\\\[#(A|B|C)\\\\]\\\\s+)?(.*?)\\\\s*(:(?:\\\\w+:)+)?$');\n}\n\norg.define('headline', headlinePattern(), function (m) {\n  var level = m[1].length;\n  var keyword = m[2];\n  var priority = m[3];\n  var content = m[4];\n  var tags = (m[5] || '').split(':').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return { level: level, keyword: keyword, priority: priority, content: content, tags: tags };\n});\n\norg.define('keyword', /^\\s*#\\+(\\w+):\\s*(.*)$/, function (m) {\n  var key = m[1];\n  var value = m[2];\n  return { key: key, value: value };\n});\n\nvar PLANNING_KEYWORDS = ['DEADLINE', 'SCHEDULED', 'CLOSED'];\norg.define('planning', RegExp('^\\\\s*(' + PLANNING_KEYWORDS.join('|') + '):\\\\s*(.+)$'), function (m) {\n  var keyword = m[1];\n  var timestamp = m[2];\n  return { keyword: keyword, timestamp: timestamp };\n});\n\norg.define('block.begin', /^\\s*#\\+begin_(\\w+)(.*)$/i, function (m) {\n  var type = m[1];\n  var params = m[2].split(' ').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return { type: type, params: params };\n});\n\norg.define('block.end', /^\\s*#\\+end_(\\w+)$/i, function (m) {\n  var type = m[1];\n  return { type: type };\n});\n\norg.define('drawer.end', /^\\s*:end:\\s*$/i);\n\norg.define('drawer.begin', /^\\s*:(\\w+):\\s*$/, function (m) {\n  var type = m[1];\n  return { type: type };\n});\n\norg.define('list.item', /^(\\s*)([-+]|\\d+[.)])\\s+(?:\\[(x|X|-| )\\])?(.*)$/, function (m) {\n  var indent = m[1].length;\n  var bullet = m[2];\n  var content = m[4];\n  var ordered = true;\n  if (['-', '+'].includes(bullet)) {\n    ordered = false;\n  }\n\n  var result = { indent: indent, ordered: ordered, content: content };\n  if (m[3]) {\n    var checked = m[3] != ' ';\n    result.checked = checked;\n  }\n  return result;\n});\n\norg.define('table.separator', /^\\s*\\|-/);\n\norg.define('table.row', /^\\s*\\|(\\s*.+\\|)+\\s*$/, function (m) {\n  var cells = m[1].split('|').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return { cells: cells };\n});\n\norg.define('horizontalRule', /^\\s*-{5,}\\s*$/);\n\norg.define('comment', /^\\s*#\\s.*$/);\n\norg.define('footnote', /^\\[fn:(\\w+)\\]:\\s*(.*)$/, function (m) {\n  var label = m[1];\n  var content = m[2];\n  return { label: label, content: content };\n});\n\nvar inline = new Syntax();\n\nfunction Lexer() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : require('./defaults');\n\n  this.syntax = org;\n  var todos = options.todos;\n\n  if (todos) {\n    this.updateTODOs(todos);\n  }\n}\n\nLexer.prototype = {\n  tokenize: function tokenize(input) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = this.syntax.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _ref = _step.value;\n        var name = _ref.name;\n        var pattern = _ref.pattern;\n        var post = _ref.post;\n\n        var m = pattern.exec(input);\n        if (!m) {\n          continue;\n        }\n        var token = { name: name, raw: input };\n        token.data = post(m);\n        return token;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var trimed = input.trim();\n    if (trimed === '') {\n      return { name: 'blank', raw: input };\n    }\n\n    return { name: 'line', raw: input };\n  },\n\n  updateTODOs: function updateTODOs(todos) {\n    this.syntax.update('headline', headlinePattern(todos));\n  }\n\n};\n\nmodule.exports = Lexer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/orga/lib/lexer.js\n// module id = 498\n// module chunks = 202837685886607","\"use strict\";\n\nfunction Node(type) {\n  var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  this.type = type;\n  this.children = [];\n  this.push(children);\n}\n\nNode.prototype = {\n  with: function _with(data) {\n    var newNode = this;\n    newNode = Object.assign(this, data);\n    return newNode;\n  },\n\n  push: function push(node) {\n    if (Array.isArray(node)) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = node[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var n = _step.value;\n\n          this.push(n);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else if (node instanceof Node) {\n      node.parent = this;\n      this.children.push(node);\n    } else if (typeof node === \"string\") {\n      var newNode = new Node(\"text\").with({ value: node });\n      newNode.parent = this;\n      this.children.push(newNode);\n    }\n  }\n};\n\nmodule.exports = Node;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/orga/lib/node.js\n// module id = 197\n// module chunks = 202837685886607","'use strict';\n\nvar _lexer = require('./lexer');\n\nvar _lexer2 = _interopRequireDefault(_lexer);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _inline = require('./inline');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Parser() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : require('./defaults');\n\n  this.options = options;\n  this.lexer = new _lexer2.default(this.options);\n}\n\nParser.prototype.peek = function () {\n  return this.getToken(this.cursor + 1);\n};\n\nParser.prototype.hasNext = function () {\n  return this.cursor + 1 < this.lines.length;\n};\n\nParser.prototype.consume = function () {\n  this.cursor++;\n};\n\nParser.prototype.next = function () {\n  this.consume();\n  return this.getToken(this.cursor);\n};\n\nParser.prototype.getToken = function (index) {\n  var self = this;\n  if (index >= self.lines.length) {\n    return undefined;\n  }\n  if (index >= self.tokens.length) {\n    var start = self.tokens.length;\n    for (var i = start; i <= index; i++) {\n      self.tokens.push(self.lexer.tokenize(self.lines[i]));\n    }\n  }\n  return self.tokens[index];\n};\n\nParser.prototype.downgradeToLine = function (index) {\n  var raw = this.tokens[index].raw;\n\n  this.tokens[index] = { name: 'line', raw: raw, data: { content: raw.trim() } };\n};\n\nParser.prototype.tryTo = function (process) {\n  var restorePoint = this.cursor;\n  var result = process.bind(this)();\n  if (result) {\n    return result;\n  }\n  this.cursor = restorePoint;\n  return result;\n};\n\nParser.prototype.parse = function (string) {\n  var self = this;\n  var document = new _node2.default('root').with({ meta: {} });\n  self.cursor = -1;\n  self.lines = string.split('\\n'); // TODO: more robust lines?\n  self.tokens = [];\n  return this.parseSection(document);\n};\n\nParser.prototype.processKeyword = function (token, doc) {\n  var _token$data = token.data,\n      key = _token$data.key,\n      value = _token$data.value;\n\n  switch (key) {\n    case 'TODO':\n      if (doc.type != 'root') break;\n      var todos = value.split(/\\s|\\|/g).filter(String);\n      doc.meta.todos = todos;\n      this.lexer.updateTODOs(todos);\n      break;\n    case 'HTML':\n      doc.push(new _node2.default('html').with({ value: value }));\n      break;\n    default:\n      if (doc.type === 'root') {\n        doc.meta[key.toLowerCase()] = value;\n      }\n      break;\n  }\n  return doc;\n};\n\nParser.prototype.parseHeadline = function () {\n  var token = this.next();\n  var _token$data2 = token.data,\n      level = _token$data2.level,\n      keyword = _token$data2.keyword,\n      priority = _token$data2.priority,\n      tags = _token$data2.tags,\n      content = _token$data2.content;\n\n  var text = (0, _inline.parse)(content);\n  var headline = new _node2.default('headline', text).with({\n    level: level, keyword: keyword, priority: priority, tags: tags\n  });\n  var planning = this.tryTo(parsePlanning);\n  if (planning) {\n    headline.push(planning);\n  }\n\n  while (this.hasNext() && this.peek().name == 'drawer.begin') {\n    var drawer = this.tryTo(parseDrawer);\n    if (!drawer) {\n      // broken drawer\n      this.downgradeToLine(this.cursor + 1);\n      break;\n    }\n    headline.push(drawer);\n  }\n\n  return headline;\n};\n\nParser.prototype.parseSection = function (section) {\n  var token = this.peek();\n  if (!token) {\n    return section;\n  }\n  switch (token.name) {\n    case 'keyword':\n      section = this.processKeyword(token, section);\n      this.consume();\n      break;\n    case 'headline':\n      var level = token.data.level;\n\n      var currentLevel = section.level || 0;\n      if (level <= currentLevel) {\n        return section;\n      }\n      var headline = this.parseHeadline();\n      var newSection = new _node2.default('section').with({ level: level });\n      newSection.push(headline);\n      section.push(this.parseSection(newSection));\n      break;\n    case 'line':\n      var paragraph = this.parseParagraph();\n      section.push(paragraph);\n      break;\n    case 'block.begin':\n      var block = this.tryTo(parseBlock);\n      if (block) section.push(block);else this.downgradeToLine(this.cursor + 1);\n      break;\n    case 'list.item':\n      var list = new _node2.default('list');\n      section.push(this.parseList(-1));\n      break;\n    case 'table.row':\n      var table = this.parseTable();\n      section.push(table);\n      break;\n    case 'horizontalRule':\n      this.consume();\n      section.push(new _node2.default('horizontalRule'));\n      break;\n    // TODO: footnote\n    default:\n      this.consume();\n    // this.push({ type: 'dummy', data: token.data })\n  }\n  return this.parseSection(section);\n};\n\nParser.prototype.parseParagraph = function () {\n  var lines = [];\n  do {\n    var token = this.peek();\n    // also eats broken block/drawer ends\n    if (!['line', 'block.end', 'drawer.end'].includes(token.name)) break;\n    this.consume();\n    lines = lines.concat((0, _inline.parse)(token.raw.trim()));\n  } while (this.hasNext());\n\n  return new _node2.default('paragraph', lines);\n};\n\nParser.prototype.parseList = function (level) {\n  var list = new _node2.default('list');\n  var self = this;\n  var listItems = [];\n  while (self.hasNext()) {\n    var token = self.peek();\n    if (token.name != 'list.item') break;\n    var _token$data3 = token.data,\n        indent = _token$data3.indent,\n        content = _token$data3.content,\n        ordered = _token$data3.ordered,\n        checked = _token$data3.checked;\n\n    if (indent <= level) break;\n    self.consume();\n    var item = new _node2.default('listItem', [(0, _inline.parse)(content)]).with({ ordered: ordered });\n    if (checked !== undefined) {\n      item.checked = checked;\n    }\n    item.push(self.parseList(indent));\n    list.push(item);\n  }\n  if (list.children.length > 0) {\n    // list\n    list.ordered = list.children[0].ordered;\n    return list;\n  }\n  return undefined;\n};\n\nParser.prototype.parseTable = function () {\n  var table = new _node2.default('table');\n  var self = this;\n  while (self.hasNext()) {\n    var token = self.peek();\n    if (!token.name.startsWith('table.')) break;\n    self.consume();\n    if (token.name === 'table.separator') {\n      table.push(new _node2.default('tableSeparator'));\n      continue;\n    }\n    if (token.name != 'table.row') break;\n    var cells = token.data.cells.map(function (c) {\n      return new _node2.default('tableCell', c);\n    });\n    var row = new _node2.default('tableRow', cells);\n    table.push(row);\n  }\n  return table;\n};\n\nfunction parsePlanning() {\n  var token = this.next();\n  if (!token || token.name != 'planning') {\n    return undefined;\n  }\n  return new _node2.default('planning').with(token.data);\n}\n\nfunction parseDrawer() {\n  var begin = this.next();\n  var lines = [];\n  while (this.hasNext()) {\n    var t = this.next();\n    if (t.name === 'headline') {\n      return undefined;\n    }\n    if (t.name === 'drawer.end') {\n      return new _node2.default('drawer').with({ name: begin.data.type, value: lines.join('\\n') });\n    }\n    lines.push(t.raw);\n  }\n  return undefined;\n}\n\nfunction parseBlock() {\n  var t = this.next();\n  var _t$data = t.data,\n      type = _t$data.type,\n      params = _t$data.params;\n\n  var lines = [];\n  while (this.hasNext()) {\n    var _t = this.next();\n    if (_t.name === 'headline') {\n      return undefined;\n    }\n    if (_t.name === 'block.end' && _t.data.type.toUpperCase() === type.toUpperCase()) {\n      if (_t.data.type.toUpperCase() === 'EXPORT') {\n        var format = params[0];\n        return new _node2.default(format).with({ value: lines.join('\\n') });\n      }\n      return new _node2.default('block').with({ name: type.toUpperCase(), params: params, value: lines.join('\\n') });\n    }\n    lines.push(_t.raw);\n  }\n  return undefined;\n}\n\nmodule.exports = Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/orga/lib/parser.js\n// module id = 499\n// module chunks = 202837685886607","// removed by extract-text-webpack-plugin\nmodule.exports = {\"title\":\"src-pages----_style-module---title---2ID2H\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/_style.module.scss\n// module id = 340\n// module chunks = 202837685886607","import React from 'react'\nimport { Parser } from 'orga'\nimport style from \"./_style.module.scss\"\n\nexport default class AST extends React.Component {\n  render() {\n    const d = this.props.data.astToml\n    const parser = new Parser()\n    const replacer = (key, value) => {\n      if ([`parent`].includes(key)) return\n      if (Array.isArray(value) && value.length === 0) return\n      return value\n    }\n    const examples = d.examples.map(e => {\n      const obj = parser.parse(e.org)\n      const json = JSON.stringify(obj.children[0], replacer, 2)\n      console.log(json)\n      return (\n        <div>\n          <h2>{ e.name }</h2>\n          <p>{ e.desc }</p>\n          <pre><code>{ e.org }</code></pre>\n          <p>Yields:</p>\n          <pre><code>{ json }</code></pre>\n        </div>\n      )\n    })\n    return (\n      <div>\n        <h1 className={style.title}>Abstract Syntax Tree</h1>\n        { examples }\n      </div>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query ast {\n    astToml {\n      examples {\n        name\n        org\n        desc\n      }\n    }\n  }\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ast.jsx"],"sourceRoot":""}